@use "sass:color";
@use "../core/module";

/// Applies table styles with configurable colors and behaviors
/// @param {List} $colors [()] - List of registered color variants to generate. Pass null to include all registered palettes
///
/// @termeh {Color} [error] - color("primary") -> accent color for scrollbars
/// @termeh {Color} [error] - color("shade") -> fallback color for sort backgrounds and decorators
/// @termeh {Color} [white] - var("base", "color") -> fallback base table background
/// @termeh {Color} [null] - var("base", "section") -> fallback background for even rows and row hover
/// @termeh {Color} [null] - var("base", "separator") -> fallback color for table separators and dividers
/// @termeh {String} [bold] - var("strong", "weight") -> fallback font weight for headers
/// @termeh {Color} [FALLBACK] - var("table", "background") -> main table background
/// @termeh {Color} [null] - var("table", "foreground") -> default table text color
/// @termeh {Color} [FALLBACK] - var("table", "even") -> even row background
/// @termeh {Color} [FALLBACK] - var("table", "hover") -> hover row background
/// @termeh {Color} [null] - var("table", "grid") -> grid line color
/// @termeh {Color} [FALLBACK] - var("table", "divider") -> section divider color
/// @termeh {Color} [FALLBACK] - var("table", "separator") -> row separator color
/// @termeh {Color} [error] - var("table", "decorator") -> sort decorator color
/// @termeh {Color} [FALLBACK] - var("table", "sort-background") -> sorted column background
/// @termeh {String} [FALLBACK] - var("table", "strong-weight") -> strong font weight for headers
@mixin use-table($colors: ()) {
    $primary: module.color("primary");
    $shade: module.color("shade");

    $base-color: module.var("base", "color", white);
    $base-section: module.var("base", "section");
    $base-separator: module.var("base", "separator");
    $base-sort: rgba($shade, 0.05);
    $base-hover: color.mix($base-section, $shade, 90%);
    $base-strong: module.var("strong", "weight", bold);

    $table-background: module.var("table", "background", $base-color);
    $table-foreground: module.var("table", "foreground");
    $table-even: module.var("table", "even", $base-section);
    $table-hover: module.var("table", "hover", $base-hover);
    $table-grid: module.var("table", "grid", null);
    $table-divider: module.var("table", "divider", $base-separator);
    $table-separator: module.var("table", "separator", $base-separator);
    $table-decorator: module.var("table", "decorator", $shade);

    $sort-background: module.var("table", "sort-background", $base-sort);

    $table-strong: module.var("table", "strong-weight", $base-strong);

    @at-root {
        .table-container {
            display: block;
            overflow: auto visible;
            @include module.overflow-touch();
            @include module.scrollable($primary);
        }

        table {
            margin: 0;
            padding: 0;
            font: inherit;
            table-layout: auto;

            thead {
                padding: 0;
                margin: 0;
                border-bottom: 1px solid $table-divider;

                tr {
                    overflow: hidden;
                    white-space: nowrap;
                    background: $table-background;
                    border-top: 1px solid $table-separator;
                    @include module.transition(all);

                    th {
                        width: 1px;
                        vertical-align: middle;
                        color: $table-foreground;
                        font-weight: $table-strong;
                        padding: module.inline-padding();
                        @include module.transition(all);

                        &.is-center-aligned {
                            text-align: center;
                        }

                        &.is-right-aligned {
                            text-align: right;
                        }

                        &.is-left-aligned {
                            text-align: left;
                        }

                        &.is-ellipsis {
                            max-width: 1px;
                            text-overflow: ellipsis;
                        }

                        &.is-filler {
                            width: auto;
                            max-width: 1px;
                            text-overflow: ellipsis;
                        }

                        &.is-sorted {
                            background-color: $sort-background;
                        }

                        &.is-sortable {
                            cursor: pointer;

                            &.is-asc {
                                border-top: 1px solid $table-decorator;
                            }

                            &.is-desc {
                                border-bottom: 1px solid $table-decorator;
                            }
                        }
                    }
                }
            }

            tbody,
            tfoot {
                tr {
                    background: $table-background;
                    @include module.transition(all);

                    &:not(:last-child) {
                        border-bottom: 1px solid $table-separator;
                    }

                    td {
                        width: 1px;
                        font-weight: inherit;
                        vertical-align: middle;
                        color: $table-foreground;
                        padding: module.inline-padding();
                        @include module.transition(all);

                        &.is-center-aligned {
                            text-align: center;
                        }

                        &.is-right-aligned {
                            text-align: right;
                        }

                        &.is-left-aligned {
                            text-align: left;
                        }

                        &.is-ellipsis {
                            max-width: 1px;
                            text-overflow: ellipsis;
                        }

                        &.is-filler {
                            width: auto;
                            max-width: 1px;
                            text-overflow: ellipsis;
                        }

                        &.is-sorted {
                            background-color: $sort-background;
                        }

                        &:not(.is-multiline) {
                            overflow: hidden;
                            white-space: nowrap;
                        }
                    }
                }
            }

            tbody {
                tr {
                    &.is-even {
                        background: $table-even;
                    }

                    &:not(.is-expanded) .extra {
                        display: none;
                    }

                    &:not(.is-expanded):has(+ tr.extra) {
                        + tr.extra {
                            display: none;
                        }
                    }

                    &:not(:last-child) {
                        border-bottom: 1px solid $table-separator;
                    }

                    &:last-child {
                        border-bottom: 1px solid $table-divider;
                    }
                }
            }

            @if $table-grid {
                @include module.is-ltr() {
                    tbody tr td:not(:first-child) {
                        border-left: 1px solid $table-grid;
                    }
                }

                @include module.is-rtl() {
                    tbody tr td:not(:first-child) {
                        border-right: 1px solid $table-grid;
                    }
                }
            }

            &.is-fullwidth {
                width: 100%;
            }

            &.is-stripped > tbody > tr:nth-child(even) {
                background: $table-even;
            }

            &.is-hoverable > tbody > tr:hover {
                background: $table-hover;
            }

            @each $name, $color in module.colors($includes: $colors) {
                &.is-#{$name} {
                    @include module.selection($name);

                    thead {
                        tr {
                            th {
                                &.is-sorted {
                                    color: module.variant($name, "readable");
                                    background-color: rgba($color, 0.05);
                                }

                                &.is-sortable {
                                    &.is-asc {
                                        border-top-color: $color;
                                    }

                                    &.is-desc {
                                        border-bottom-color: $color;
                                    }
                                }
                            }
                        }
                    }

                    tbody,
                    tfoot {
                        tr {
                            td {
                                &.is-sorted {
                                    background-color: rgba($color, 0.05);
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
