@use "../animation";
@use "../core/module";

/// Generates input element styles with configurable gaps and colors
/// @param {List} $gaps [()] - List of registered gap names to include. Pass null to include all registered gaps
/// @param {List} $colors [()] - List of registered color names to include. Pass null to include all registered colors
/// @termeh {Color} [error] - color("error")
/// @termeh {Color} [error] - color("primary")
/// @termeh {Number} [null] - var("radius", "normal")
/// @termeh {Number} [2.8rem] - var("input", "height")
/// @termeh {Color} [var("base", "separator")] - var("input", "border")
/// @termeh {Color} [white] - var("input", "background")
/// @termeh {Color} [variant("shade", "mute")] - var("input", "placeholder")
@mixin use-input($gaps: (), $colors: ()) {
    $radius: module.var("radius", "normal");

    $error: module.color("error");
    $primary: module.color("primary");
    $shade: module.variant("shade", "mute");
    $separator: module.var("base", "separator", #eee);

    $height: module.var("input", "height", 2.8rem);
    $border: module.var("input", "border", $separator);
    $background: module.var("input", "background", white);
    $placeholder: module.var("input", "placeholder", $shade);

    @at-root {
        @include animation.shake();

        .input {
            display: flex;
            align-items: center;
            flex-flow: row nowrap;
            height: $height;
            line-height: 1em;
            border-radius: $radius;
            border: 1px solid $border;
            background-color: $background;
            padding: module.control-padding();
            @include module.transition(all);

            > .divider {
                width: 1px;
                height: 1em;
                display: block;
                margin: 0 1em;
                background-color: $separator;
            }

            > .gutter {
                display: block;
                flex: 0 0 auto;
                width: 1em;
                box-sizing: border-box;
            }

            > * {
                line-height: 1em !important;
            }

            input {
                @include module.control();

                display: block;
                flex: 1 1 0;
                border-radius: 0;

                @include module.placeholder {
                    color: $placeholder;
                }
            }

            &.is-focused,
            &:focus-within {
                border-color: $primary;
            }

            @each $name, $gap in module.gaps($includes: $gaps) {
                &.is-#{$name}-gap {
                    > .divider {
                        margin: 0 module.half($gap);
                    }

                    > .gutter {
                        width: $gap;
                    }
                }
            }

            @each $name, $color in module.colors($includes: $colors) {
                &.is-#{$name} {
                    &.is-focused,
                    &:focus-within {
                        border-color: $color;
                    }

                    @include module.selection($name);
                }
            }

            @include module.is-invalid() {
                border-color: $error;
                animation: shake 0.5s ease;
            }

            @include module.is-disabled() {
                @include module.disabled();
            }
        }
    }
}
