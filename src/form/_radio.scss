@use "../animation";
@use "../core/module";

/// Generates radio input styles with configurable colors
/// @param {List} $colors [()] - List of registered color names to include. Pass null to include all registered colors
///
/// @termeh {Color} [error] - color("error") -> accent color for invalid state
/// @termeh {Color} [error] - color("primary") -> default accent color
/// @termeh {Color} [null] - var("base", "separator") -> fallback border color
/// @termeh {Number} [null] - var("radius", "normal") -> default input border radius
/// @termeh {Number} [8px] - var("gap", "micro") -> spacing between input and label
/// @termeh {Number} [2.8em] - var("input", "height") -> input height
/// @termeh {Number} [1.2em] - var("input", "checkbox") -> radio item height
/// @termeh {Color} [FALLBACK] - var("input", "border") -> default input border color
/// @termeh {Color} [null] - var("input", "disabled-foreground") -> disabled input accent color
/// @termeh {Color} [null] - var("input", "disabled-border") -> disabled input border color
@mixin use-radio($colors: ()) {
    @if not module.module-presented("form-radio") {
        @include module.present-module("form-radio");

        $error: module.color("error");
        $primary: module.color("primary");
        $separator: module.var("base", "separator", #eee);

        $radius: module.var("radius", "circle", 50%);
        $gap-micro: module.var("gap", "micro", 8px);

        $height: module.var("input", "height", 2.8em);
        $size: module.var("input", "checkbox", 1.2em);

        $border: module.var("input", "border", $separator);
        $disabled: module.var("input", "disabled-foreground");
        $disabled-border: module.var("input", "disabled-border");

        @at-root {
            @include animation.shake();

            label.radio {
                display: flex;
                align-items: center;
                flex-flow: row nowrap;
                margin: 0;
                padding: 0;
                height: $height;
                line-height: 1em;
                cursor: pointer;
                box-sizing: border-box;

                input[type="radio"] {
                    -webkit-appearance: none;
                    -moz-appearance: none;
                    appearance: none;
                    display: grid;
                    place-content: center;
                    overflow: hidden;
                    margin: 0;
                    font: inherit;
                    width: $size;
                    height: $size;
                    border-radius: $radius;
                    border: 1px solid $border;
                    cursor: pointer;
                    flex: 0 0 auto;
                    box-shadow: module.flat-shadow(0, rgba($primary, 0.25));
                    @include module.transition(all);

                    &::after {
                        content: "";
                        width: $size;
                        height: $size;
                        display: block;
                        box-sizing: border-box;
                        transform: scale(0);
                        border-radius: $radius;
                        background-color: $primary;
                        @include module.transition(all);
                    }

                    &:focus,
                    &:focus-within {
                        border-color: $primary;
                    }

                    &:checked {
                        box-shadow: module.flat-shadow(5px, rgba($primary, 0));

                        &::after {
                            transform: scale(0.6);
                        }
                    }
                }

                @each $name, $color in module.colors($includes: $colors) {
                    &.is-#{$name} input[type="radio"] {
                        box-shadow: module.flat-shadow(0, rgba($color, 0.25));

                        &::after {
                            background-color: $color;
                        }

                        &:focus,
                        &:focus-within {
                            border-color: $color;
                        }

                        &:checked {
                            box-shadow: module.flat-shadow(5px, rgba($color, 0));
                        }
                    }
                }

                @include module.is-ltr() {
                    input[type="radio"] {
                        margin-left: 0;
                        margin-right: $gap-micro;
                    }
                }

                @include module.is-rtl() {
                    input[type="radio"] {
                        margin-left: $gap-micro;
                        margin-right: 0;
                    }
                }

                @include module.is-invalid() {
                    animation: shake 0.5s ease;

                    input[type="radio"] {
                        border-color: $error;

                        &::after {
                            background-color: $error;
                        }

                        &:checked {
                            box-shadow: module.flat-shadow(5px, rgba($error, 0));
                        }
                    }
                }

                @include module.is-disabled() {
                    color: $disabled;

                    input[type="radio"] {
                        border-color: $disabled-border;

                        &::after {
                            background-color: $disabled;
                        }
                    }
                    @include module.locked();
                }
            }
        }
    }
}
