@use "../core/module";

/// Generates wrapper element styles with configurable gaps
/// @param {List} $gaps [()] - List of registered gap names to include. Pass null to include all registered gaps
/// @termeh {Number} [8px] - var("gap", "micro")
@mixin use-wrapper($gaps: ()) {
    $gap-micro: module.var("gap", "micro", 8px);

    @at-root {
        .wrapper {
            display: flex;
            flex-flow: row wrap;
            align-items: center;
            box-sizing: border-box;

            > * {
                flex: 1 1 0;
                box-sizing: border-box;
            }

            &:not(.is-gapless) {
                margin: module.negate(module.half($gap-micro));

                > * {
                    margin: module.half($gap-micro);
                }

                @each $name, $gap in module.gaps($includes: $gaps) {
                    &.is-#{$name}-gap {
                        margin: module.negate(module.half($gap));

                        > * {
                            margin: module.half($gap);
                        }
                    }
                }
            }
        }
    }
}
